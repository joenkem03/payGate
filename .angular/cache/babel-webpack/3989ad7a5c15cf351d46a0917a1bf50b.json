{"ast":null,"code":"import _classCallCheck from \"C:/Users/syntoid/Documents/me/bare/g/Gust%20V2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/syntoid/Documents/me/bare/g/Gust%20V2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse, HttpResponse } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError, map } from 'rxjs/operators';\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { LogicReuseable } from \"../core/logic.reuseable\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../core/logic.reuseable\";\nexport var TokenInterceptor = /*#__PURE__*/(function () {\n  var TokenInterceptor = /*#__PURE__*/function () {\n    function TokenInterceptor(router, toastr, logic) {\n      _classCallCheck(this, TokenInterceptor);\n\n      this.router = router;\n      this.toastr = toastr;\n      this.logic = logic;\n    }\n\n    _createClass(TokenInterceptor, [{\n      key: \"handleError\",\n      value: function handleError(error) {\n        console.log(error);\n        return throwError(error);\n      }\n    }, {\n      key: \"intercept\",\n      value: function intercept(request, next) {\n        var _this = this;\n\n        return next.handle(request).pipe(map(function (event) {\n          if (event instanceof HttpResponse) {\n            console.log('event--->>>', event); // this.errorDialogService.openDialog(event);\n          }\n\n          return event;\n        }), catchError(function (error) {\n          if (error.status === 401) {\n            _this.router.navigate([\"login\"]);\n          } // let data = {};\n          // data = {\n          //     message: error && error.error && error.error.Message ? error.error.Message : '',\n          //     status: error.status\n          // };\n\n\n          _this.errorMessage = error.error.Message;\n\n          if (_this.errorMessage) {\n            _this.logic.getErrorNotification(_this.errorMessage);\n          }\n\n          return throwError(error);\n        }));\n      }\n    }]);\n\n    return TokenInterceptor;\n  }();\n\n  TokenInterceptor.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.LogicReuseable));\n  };\n\n  TokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}